---

# Platform.

- name: Packages
  ansible.builtin.apt:
      pkg:
          - git
          - python3-venv
          - memcached
          - unzip

- name: Nginx servers
  notify:
      - restart daoistic nginx service
  ansible.builtin.template:
      src: nginx.conf
      dest: /etc/nginx/conf.d/daoistic.ca.conf
      mode: "0644"


# Django project.

- name: Deployment directory
  ansible.builtin.file:
      path: /opt/daoistic
      state: directory
      owner: root
      group: root
      mode: "0755"

- name: Directory
  ansible.builtin.file:
      path: /opt/daoistic/web
      state: directory
      owner: peter
      group: peter
      mode: "0700"

- name: Repo
  notify:
      - restart daoistic service
  become: true
  become_user: peter
  ansible.builtin.git:
      repo: "{{ daoistic_web_repo }}"
      dest: /opt/daoistic/web
      version: "{{ daoistic_web_version }}"
      force: true
  register: daoistic_clone
  # Clean
  # Upgrade
  # Sync
  # Migrate

- name: Clean
  ansible.builtin.file:
      path: /opt/daoistic/static
      state: absent
  when: daoistic_clone is changed  # noqa: no-handler

- name: Stat static
  ansible.builtin.stat:
      path: /opt/daoistic/static
  register: daoistic_static
  # Static.

- name: Static
  ansible.builtin.copy:
      src: /opt/daoistic/web/static
      dest: /opt/daoistic
      remote_src: true
      owner: www-data
      group: www-data
      mode: "0700"
  when: not daoistic_static.stat.exists

- name: Settings
  notify:
      - restart daoistic service
  become: true
  become_user: peter
  ansible.builtin.template:
      src: settings.py
      dest: /opt/daoistic/web/var/settings.py
      mode: "0644"


# Venv.

- name: Venv
  notify:
      - restart daoistic service
  become: true
  become_user: peter
  ansible.builtin.command:
      cmd: python3 -m venv venv
  args:
      chdir: /opt/daoistic/web/var
      creates: /opt/daoistic/web/var/venv
  register: daoistic_venv
  # Upgrade
  # Sync

- name: Upgrade
  become: true
  become_user: peter
  ansible.builtin.command:
      cmd: /opt/daoistic/web/var/venv/bin/pip install --upgrade pip \
        setuptools wheel pip-tools
  when: daoistic_clone is changed or daoistic_venv is changed
  register: upgrade_output
  changed_when: '"Successfully installed" not in upgrade_output.stdout'

- name: Sync
  become: true
  become_user: peter
  ansible.builtin.command:
      cmd: /opt/daoistic/web/var/venv/bin/pip-sync requirements.txt
  args:
      chdir: /opt/daoistic/web
  when: daoistic_clone is changed or daoistic_venv is changed
  register: sync_output
  changed_when: '"Successfully installed" not in sync_output.stdout'


# Manage database.

- name: Stat db
  ansible.builtin.stat:
      path: /opt/daoistic/web/var/db.sqlite3
  register: daoistic_db
  # Copy unihan

- name: Download db
  become: true
  become_user: peter
  ansible.builtin.unarchive:
      src: "https://github.com/\
            tessercat/daoistic-deploy/releases/download/\
            {{ unihan_version }}/{{ unihan_version }}.zip"
      dest: /opt/daoistic/web/var
      remote_src: true
      creates: /opt/daoistic/web/var/db.sqlite3
  when: not daoistic_db.stat.exists

- name: Migrate
  become: true
  become_user: peter
  ansible.builtin.command:
      cmd: /opt/daoistic/web/var/venv/bin/python manage.py migrate
  args:
      chdir: /opt/daoistic/web
  when: daoistic_clone is changed and daoistic_db.stat.exists
  register: migrate_output
  changed_when: '"No migrations to apply" not in migrate_output.stdout'


# Systemd service.

- name: Service file
  notify:
      - restart daoistic service
  ansible.builtin.template:
      src: service
      dest: /etc/systemd/system/daoistic.service
      mode: "0644"

- name: Service state
  ansible.builtin.systemd:
      name: daoistic.service
      enabled: true
      daemon-reload: true


# Import blog data.

- name: Stat data
  ansible.builtin.stat:
      path: /opt/daoistic/web/var/data
  register: daoistic_data_dir
  # Copy blog

- name: Clone data
  become: true
  become_user: peter
  ansible.builtin.git:
      repo: "{{ daoistic_data_repo }}"
      dest: /opt/daoistic/web/var/data
      version: "{{ daoistic_data_version }}"
  register: daoistic_data
  when: not daoistic_data_dir.stat.exists
  # Import blog

- name: Import data
  become: true
  become_user: peter
  ansible.builtin.command:
      cmd: /opt/daoistic/web/var/venv/bin/python manage.py importblog
  args:
      chdir: /opt/daoistic/web
  when: daoistic_data is changed  # noqa: no-handler
  register: import_output
  changed_when:
      - '"Copied" in import_output'
      - '"Removed" in import_output'
      - '"Updated" in import_output'
      - '"Created" in import_output'
      - '"Deleted" in import_output'


# Handlers.

- name: Handlers
  ansible.builtin.meta: flush_handlers
